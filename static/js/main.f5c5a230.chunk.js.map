{"version":3,"sources":["logo.svg","components/Counter.js","components/Welcome.js","components/Message.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","Component","props","state","count","this","setState","console","log","increment","onClick","incrementFive","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,wCCyCAA,GCvCOC,YCAAA,Y,kDFCpB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,GAJQ,E,6CAQnB,WAAa,IAAD,OACVC,KAAKC,SACH,CACEF,MAAOC,KAAKF,MAAMC,MAAQ,IAE5B,WACEG,QAAQC,IAAI,iBAAkB,EAAKL,MAAMC,UAG7CG,QAAQC,IAAIH,KAAKF,MAAMC,S,2BAGzB,WACIC,KAAKI,YACLJ,KAAKI,YACLJ,KAAKI,YACLJ,KAAKI,YACLJ,KAAKI,c,oBAGT,WAAU,IAAD,OACP,OACE,gCACE,2CAAcJ,KAAKF,MAAMC,SACzB,wBAAQM,QAAS,kBAAM,EAAKC,iBAA5B,8B,GAjCcV,cG0BPW,MApBf,WACE,OACE,qBAAKC,UAAU,MAAf,SAEE,cAAC,EAAD,OCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5c5a230.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n    };\r\n  }\r\n\r\n  increment() {\r\n    this.setState(\r\n      {\r\n        count: this.state.count + 1,\r\n      },\r\n      () => {\r\n        console.log(\"Callback value\", this.state.count);\r\n      }\r\n    ); // this is callback function, call after the state has been updated\r\n    console.log(this.state.count); //this is called before the state gets called\r\n  }\r\n\r\n  incrementFive() {\r\n      this.increment();\r\n      this.increment();\r\n      this.increment();\r\n      this.increment();\r\n      this.increment();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Count - {this.state.count}</div>\r\n        <button onClick={() => this.incrementFive()}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <h1>\r\n        Welcome {this.props.name} a.k.a {this.props.heroName}\r\n      </h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Message extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      message: \"Welcome visitor\",\r\n    };\r\n  }\r\n\r\n  changeMessage() { //method to alter state \r\n      this.setState({\r\n          message: \"Thank you for subscribing\"\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1> {this.state.message} </h1>\r\n        <button onClick={() => this.changeMessage()}>Subscribe</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Greet from './components/Greet'\nimport Welcome from './components/Welcome'\nimport Hello from './components/Hello'\nimport Message from './components/Message'\nimport Counter from './components/Counter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Message/> */}\n      <Counter></Counter>\n       {/* <Greet name = \"Clark\" heroName = \"Super Man\" >\n         This is children props\n       </Greet>\n       <Greet name = \"Diana\" heroName = \"Wonder Woman\">\n         <button>Action</button>\n       </Greet>\n       <Greet name = \"Bruce\" heroName = \"Batman\"/>\n       <Welcome name = \"Clark\" heroName = \"Super Man\"/>\n       <Welcome name = \"Diana\" heroName = \"Wonder Woman\"/>\n       <Welcome name = \"Bruce\" heroName = \"Batman\"/>\n       <Hello />  */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}